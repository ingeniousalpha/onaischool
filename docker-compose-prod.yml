version: '3.9'

volumes:
  media:
  static:
  redis_data:
  portainer_data:

networks:
  gp-net:
    driver: bridge

services:
  onai-server:
    container_name: onai-server
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/onaischool
      - media:/media
    env_file:
      - ./.env.dev
    ports:
      - "8008:8000"
    #    depends_on:
    #      - redis
    #      - postgres
    #      - celery-worker
    networks:
      - onai-net
  #    command: sh -c "python manage.py collectstatic --noinput --clear"

#  gp-bot:
#    container_name: gp-bot
#    restart: always
#    build:
#      context: .
#      dockerfile: Dockerfile.bot
#    command: python apps/bot/launcher.py
#    volumes:
#      - .:/gamerpro
#    env_file:
#      - ./.env.dev
#    networks:
#      - gp-net

  onai-redis:
    container_name: onai-redis
    restart: unless-stopped
    image: redis
    command: redis-server --appendonly yes --replica-read-only no --requirepass $REDIS_PASSWORD
    ports:
      - "6379:6379"
    volumes:
      - onai-redis_data:/data
    env_file:
      - ./.env.dev
    networks:
      - onai-net

  onai-beat:
    container_name: onai-beat
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/onaischool
    env_file:
      - ./.env.dev
    depends_on:
      - onai-worker
      - onai-server
    networks:
      - onai-net
    command: "celery -A config.celery_app beat --loglevel=INFO"

  onai-worker:
    container_name: onai-worker
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/onaischool
    env_file:
      - ./.env.dev
    networks:
      - onai-net
    command: "celery -A config.celery_app worker --loglevel=INFO"

  onai-portainer:
    container_name: onai-portainer
    image: portainer/portainer-ce:latest
    environment:
      - TZ=Asia/Almaty
    ports:
      - "9000:9000"
    volumes:
      - onai-portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  questionnaire-bot:
    container_name: questionnaire-bot
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.bot
    command: python apps/questionnaire_bot/launcher.py
    volumes:
      - .:/onaischool
    env_file:
      - ./.env.dev
    depends_on:
      - onai-db
    networks:
      - onai-net
