"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import base64
import os
from collections import OrderedDict
from datetime import timedelta

from config.constants.error_messages import ERROR_MESSAGES

# Build paths inside the project like this: BASE_DIR / 'subdir'.

PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'm$*!s$%=a1e685t@h#34%!-!(q5(q=lj0bdlgh&ewv)*u3#nz6'
ENCRYPTION_KEY = 'S3&ewm85t=a1e6@h$*!s$d%#v)*4%!-!(q5(q=lj0bdlghu3#nz6'
LANDING_SECRET_KEY = 'm$*!s$%=a1e685t@h#34%!-!(q5(q=lj0bdlgh&ewv)*u3#nz6'
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

HOTP_KEY = base64.b32encode(SECRET_KEY.encode("utf-8"))
OTP_LENGTH = 4
OTP_VALIDITY_PERIOD = 90  # in seconds

SITE_URL = os.getenv('SITE_URL', '127.0.0.1:8000')
DEV_MODE = bool(os.getenv('DEV_MODE', 1))
APPEND_SLASH = True
TG_AUTH_BOT_USERNAME = os.getenv('TG_AUTH_BOT_USERNAME')
TG_AUTH_BOT_HOST = os.getenv('TG_AUTH_BOT_HOST', 'http://gp-tgauth-bot:3113')
TELEGRAM_BOT_TOKEN = "7783386485:AAGkgoGDPAhu7n7_HXYwmxFBv_n7jvme_Cc"


# RABBITMQ_HOST_SERVER = 'localhost'
# RABBITMQ_USER = 'user'
# RABBITMQ_PASSWORD = 'user'
# RABBITMQ_PORT = '5672/%2F'
# RABBITMQ_HOST_LOCAL = '185.100.67.155'

# Redis settings
REDIS_HOST = os.getenv("REDIS", "onai-redis")
# REDIS_HOST = "localhost"
REDIS_PORT = os.getenv("REDIS_PORT", "6379")
REDIS_DB_FOR_CELERY = os.getenv("REDIS_DB_FOR_CELERY", "0")
REDIS_DB_FOR_CACHE = os.getenv("REDIS_DB_FOR_CACHE", "1")
REDIS_AS_CACHE_URL = "redis://{host}:{port}/{db_index}".format(
    host=REDIS_HOST,
    port=REDIS_PORT,
    db_index=REDIS_DB_FOR_CACHE,
)
REDIS_AS_BROKER_URL = "redis://{host}:{port}/{db_index}".format(
    host=REDIS_HOST,
    port=REDIS_PORT,
    db_index=REDIS_DB_FOR_CELERY,
)

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'api_key': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization'
        }
    },
}

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_CONFIG = {
    **ERROR_MESSAGES,
    "EXCEPTION_HANDLING_STATUS": (True, "–°—Ç–∞—Ç—É—Å –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π", bool),
    "USE_DEFAULT_OTP": (True, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", bool),
    "DEFAULT_OTP": ("1111", "–ö–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", str),
    "CUSTOM_TOKEN_TTL_TURNED_ON": (False, "–í–∫–ª—é—á–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∂–∏–∑–Ω–∏ access —Ç–æ–∫–µ–Ω–∞", bool),
    "CUSTOM_TOKEN_TTL_SECONDS": (15, "–ø–µ—Ä–∏–æ–¥ –∂–∏–∑–Ω–∏ access_token –≤ —Å–µ–∫—É–Ω–¥–∞—Ö", int),

    "BOT_EXAM_ID": (1, "ID —Ç–µ—Å—Ç–∞ –¥–ª—è –±–æ—Ç–∞", int),
    "BOT_INITIAL_TEXT": ("–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", '–¢–µ–∫—Å—Ç –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ (kk/ru)', str),
    "BOT_INITIAL_BUTTON_TEXT_KK": ("“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ (kk)', str),
    "BOT_INITIAL_BUTTON_TEXT_RU": ("–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ (ru)', str),
    "BOT_UNAVAILABLE_TEXT": ("–ë–æ—Ç —É–∞“õ—ã—Ç—à–∞ “õ–æ–ª–∂–µ—Ç—ñ–º—Å—ñ–∑ / –ë–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", '–¢–µ–∫—Å—Ç –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ (kk/ru)', str),
    "BOT_WELCOME_TEXT_KK": (
        "“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! üéì\n\n"
        "–ú–µ–Ω ‚Äì —Å—ñ–∑–¥—ñ“£ –≤–∏—Ä—Ç—É–∞–ª–¥—ã –∫”©–º–µ–∫—à—ñ“£—ñ–∑, –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ, –æ—Ä—ã—Å —Ç—ñ–ª—ñ –∂”ô–Ω–µ –∞“ì—ã–ª—à—ã–Ω —Ç—ñ–ª–¥–µ—Ä—ñ–Ω–µ–Ω "
        "–±—ñ–ª—ñ–º –¥–µ“£–≥–µ–π—ñ“£—ñ–∑–¥—ñ –±–∞“ì–∞–ª–∞—É“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å–µ–º—ñ–Ω. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞–ª—ã“õ —Ç–µ—Å—Ç—Ç—ñ ”©—Ç—ñ–ø:\n\n"
        "- ”©–∑—ñ“£—ñ–∑–¥—ñ“£ –º—ã“õ—Ç—ã –∂–∞“õ—Ç–∞—Ä—ã“£—ã–∑–¥—ã –∞–Ω—ã“õ—Ç–∞“£—ã–∑,\n"
        "- –∂–∞“õ—Å–∞—Ä—Ç—É–¥—ã “õ–∞–∂–µ—Ç –µ—Ç–µ—Ç—ñ–Ω —Ç“±—Å—Ç–∞—Ä–¥—ã –±—ñ–ª—ñ“£—ñ–∑,\n"
        "- –∂–µ–∫–µ “±—Å—ã–Ω—ã—Å—Ç–∞—Ä –∞–ª—ã“£—ã–∑.\n\n"
        "–ë–∞—Å—Ç–∞—É“ì–∞ –¥–∞–π—ã–Ω—Å—ã–∑ –±–∞?",
        '–¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (kk)',
        str
    ),
    "BOT_WELCOME_TEXT_RU": (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üéì\n\n"
        "–Ø ‚Äî –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –æ—Ü–µ–Ω–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ, —Ä—É—Å—Å–∫–æ–º—É, "
        "–∫–∞–∑–∞—Ö—Å–∫–æ–º—É –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫–∞–º. –ü—Ä–æ–π–¥–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç, —á—Ç–æ–±—ã:\n\n"
        "- —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã,\n"
        "- –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è,\n"
        "- –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n\n"
        "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?",
        '–¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (ru)',
        str
    ),
    "BOT_WELCOME_BUTTON_TEXT_KK": ("–¢–µ—Å—Ç—Ç—ñ –±–∞—Å—Ç–∞—É", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (kk)', str),
    "BOT_WELCOME_BUTTON_TEXT_RU": ("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (ru)', str),
    "BOT_USER_ANSWER_TEXT_KK": ("–°—ñ–∑–¥—ñ“£ –∂–∞—É–∞–±—ã“£—ã–∑:", '–¢–µ–∫—Å—Ç "–í–∞—à –æ—Ç–≤–µ—Ç" (kk)', str),
    "BOT_USER_ANSWER_TEXT_RU": ("–í–∞—à –æ—Ç–≤–µ—Ç:", '–¢–µ–∫—Å—Ç "–í–∞—à –æ—Ç–≤–µ—Ç" (ru)', str),
    "BOT_FINISH_ALERT_TEXT_KK": ("–ù”ô—Ç–∏–∂–µ–ª–µ—Ä –¥–∞–π—ã–Ω! üéâ", '–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ (kk)', str),
    "BOT_FINISH_ALERT_TEXT_RU": ("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ—Ç–æ–≤—ã! üéâ", '–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ (ru)', str),
    "BOT_SCORE_TEXT_KK": (
        "–¢–µ—Å—Ç—Ç–µ–Ω ”©—Ç–∫–µ–Ω—ñ“£—ñ–∑ “Ø—à—ñ–Ω —Ä–∞—Ö–º–µ—Ç! –°—ñ–∑–¥—ñ“£ –∂–∞–ª–ø—ã “±–ø–∞–π—ã“£—ã–∑: {}.",
        '–¢–µ–∫—Å—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (kk)',
        str
    ),
    "BOT_SCORE_TEXT_RU": (
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞! –í–∞—à –æ–±—â–∏–π –±–∞–ª–ª: {}.",
        '–¢–µ–∫—Å—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (ru)',
        str
    ),
    "BOT_GET_CONTACT_TEXT_KK": (
        "”ò—Ä –ø”ô–Ω –±–æ–π—ã–Ω—à–∞ “±–ø–∞–π–ª–∞—Ä—ã“£—ã–∑–¥—ã“£ —Ç–æ–ª—ã“õ —Ç–∞–ª–¥–∞—É—ã–Ω –∞–ª—É “Ø—à—ñ–Ω, ”©–∑ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ“£—ñ–∑–¥—ñ “õ–∞–ª–¥—ã—Ä—ã“£—ã–∑, –±—ñ–∑ –æ–Ω—ã —Å—ñ–∑–≥–µ –∂—ñ–±–µ—Ä–µ–º—ñ–∑ üôå",
        '–¢–µ–∫—Å—Ç "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞" (kk)',
        str
    ),
    "BOT_GET_CONTACT_TEXT_RU": (
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –±–∞–ª–ª–æ–≤ –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –º—ã –≤—ã—à–ª–µ–º –µ–≥–æ –í–∞–º üôå",
        '–¢–µ–∫—Å—Ç "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞" (ru)',
        str
    ),
    "BOT_GET_CONTACT_BUTTON_TEXT_KK": ("–ë”©–ª—ñ—Å—É", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞" (kk)', str),
    "BOT_GET_CONTACT_BUTTON_TEXT_RU": ("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞" (ru)', str),
    "BOT_CONTACT_SAVED_TEXT_KK": ("–ù”©–º—ñ—Ä—ñ“£—ñ–∑ —Å–∞“õ—Ç–∞–ª–¥—ã", '–¢–µ–∫—Å—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω (kk)', str),
    "BOT_CONTACT_SAVED_TEXT_RU": ("–í–∞—à –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è", '–¢–µ–∫—Å—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω (ru)', str),
    "BOT_BYE_TEXT_KK": (
        "–°–æ–Ω–¥–∞–π-–∞“õ, –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ“£—ñ–∑–≥–µ –Ω–µ–≥—ñ–∑–¥–µ–ª–µ –æ—Ç—ã—Ä—ã–ø, –±—ñ–∑ —Å—ñ–∑–≥–µ “±—Å—ã–Ω—ã—Å—Ç–∞—Ä –º–µ–Ω –ø–∞–π–¥–∞–ª—ã –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä –¥–∞–π—ã–Ω–¥–∞–¥—ã“õ.\n\n"
        "–û“õ—É –∂–æ–ª—ã–Ω–¥–∞ —Å”ô—Ç—Ç—ñ–ª—ñ–∫ —Ç—ñ–ª–µ–π–º—ñ–Ω! üöÄ",
        '–¢–µ–∫—Å—Ç –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π (kk)',
        str
    ),
    "BOT_BYE_TEXT_RU": (
        "–¢–∞–∫–∂–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è.\n\n"
        "–£–¥–∞—á–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏! üöÄ",
        '–¢–µ–∫—Å—Ç –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π (ru)',
        str
    ),
    "BOT_CHANNEL_LINK_KK": ("https://t.me/telegram", '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª (kk)', str),
    "BOT_CHANNEL_LINK_RU": ("https://t.me/telegram", '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª (ru)', str),
}

CONSTANCE_CONFIG_FIELDSETS = OrderedDict([
    ("Settings", (
        "CUSTOM_TOKEN_TTL_TURNED_ON",
        "CUSTOM_TOKEN_TTL_SECONDS",
    )),
    ("OTP settings", ("USE_DEFAULT_OTP", "DEFAULT_OTP",)),
    ("Diagnostic bot", (
        "BOT_EXAM_ID",
        "BOT_INITIAL_TEXT",
        "BOT_INITIAL_BUTTON_TEXT_KK",
        "BOT_INITIAL_BUTTON_TEXT_RU",
        "BOT_UNAVAILABLE_TEXT",
        "BOT_WELCOME_TEXT_KK",
        "BOT_WELCOME_TEXT_RU",
        "BOT_WELCOME_BUTTON_TEXT_KK",
        "BOT_WELCOME_BUTTON_TEXT_RU",
        "BOT_USER_ANSWER_TEXT_KK",
        "BOT_USER_ANSWER_TEXT_RU",
        "BOT_FINISH_ALERT_TEXT_KK",
        "BOT_FINISH_ALERT_TEXT_RU",
        "BOT_SCORE_TEXT_KK",
        "BOT_SCORE_TEXT_RU",
        "BOT_GET_CONTACT_TEXT_KK",
        "BOT_GET_CONTACT_TEXT_RU",
        "BOT_GET_CONTACT_BUTTON_TEXT_KK",
        "BOT_GET_CONTACT_BUTTON_TEXT_RU",
        "BOT_CONTACT_SAVED_TEXT_KK",
        "BOT_CONTACT_SAVED_TEXT_RU",
        "BOT_BYE_TEXT_KK",
        "BOT_BYE_TEXT_RU",
        "BOT_CHANNEL_LINK_KK",
        "BOT_CHANNEL_LINK_RU",
    )),
    ("Exception Handling", ("EXCEPTION_HANDLING_STATUS",)),
    ("Error messages", tuple(ERROR_MESSAGES.keys())),
])
CONSTANCE_IGNORE_ADMIN_VERSION_CHECK = True

CONSTANCE_REDIS_CONNECTION = {
    'host': REDIS_HOST,
    'port': REDIS_PORT,
    'db': REDIS_DB_FOR_CACHE,
}

THIRD_PARTY_APPS = [
    "rest_framework",
    "rest_framework_simplejwt.token_blacklist",
    # "django_filters",
    "corsheaders",
    "phonenumber_field",
    "constance",
    "constance.backends.database",
    "django_celery_beat",
    "django_json_widget",
    "django.contrib.postgres",
    "localized_fields"
    # "ckeditor",
    # "ckeditor_uploader",
]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

LOCAL_APPS = [
    'apps.authentication.apps.AuthenticationConfig',
    'apps.common.apps.CommonConfig',
    'apps.users.apps.UsersConfig',
    'apps.integrations.apps.IntegrationsConfig',
    'apps.content.apps.ContentConfig',
    'apps.location.apps.LocationConfig',
    'apps.analytics.apps.AnalyticsConfig',
    'apps.constructor.apps.ConstructorConfig',
    'apps.landing.apps.LandingConfig'
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

AUTH_USER_MODEL = "users.User"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'apps.common.middleware.LanguageHeaderMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(SETTINGS_PATH, "..", "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.server.wsgi.application'
LOCALIZED_FIELDS_FALLBACKS = {
    "ru": ["ru_RU", ]
}
from django.utils.translation import gettext_lazy as _

LANGUAGES = [
    ('ru', _('Russian')),
    ('kk', _('Kazakh')),
    ('en', _('English'))
]

DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB (Adjust as needed)
FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880   # 5 MB (Adjust as needed)

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'psqlextra.backend',
        "NAME": os.getenv("DB_NAME", "onaidb"),
        "USER": os.getenv("DB_USER", "onaidb"),
        "PASSWORD": os.getenv("DB_PASSWORD", "onaidb"),
        "HOST": os.getenv("DB_HOST", "onai-db"),
        "PORT": os.getenv("DB_PORT", "5432"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    'https://onai.school',
    'https://okytoky.kz',
    'http://localhost:3000',
]
CORS_ALLOW_HEADERS = [
    'access-control-allow-origin',
    'accept',
    'accept-encoding',
    'accept-language',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'cookie'
]

USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'
TIME_ZONE = "Asia/Qyzylorda"

USE_I18N = True
USE_L10N = True
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(PROJECT_DIR, "..", 'static')
# STATIC_DIR = os.path.join(BASE_DIR, 'static')
# STATICFILES_DIRS = [STATIC_DIR]
MEDIA_URL = "media/"
MEDIA_ROOT = os.path.join(PROJECT_DIR, "..", "media")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SITE_DOMAIN = "http://127.0.0.1:8008"
# TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# smtp
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.yandex.com'
EMAIL_HOST_USER = ''  # from which email letters will be sent
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
EMAIL_ADMIN_USER = 'usembaevsultan08@gmail.com'  # to which email clients' letters for support will be sent
EMAIL_DEVELOPER = 'usembaevsultan08@gmail.com'
EMAIL_PORT = 465

REST_FRAMEWORK = {
    # "DEFAULT_AUTHENTICATION_CLASSES": [
    #     "apps.users.authentication.JWTAuthentication"
    # ],
    "DEFAULT_AUTHENTICATION_CLASSES": ('apps.authentication.authentication.SafeJWTAuthentication',),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    "DATETIME_FORMAT": "%Y-%m-%dT%H:%M",
    # "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "DEFAULT_PAGINATION_CLASS": "apps.common.pagination.CustomPagination",
    "PAGE_SIZE": 100,
    'COERCE_DECIMAL_TO_STRING': False,
    'DEFAULT_VERSIONING_CLASS': 'apps.common.versioning.HeaderVersioning',
    'DEFAULT_VERSION': '1.0'
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=70),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": False,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUTH_HEADER_TYPES": ("JWT",),
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_AS_CACHE_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# Celery settings

CELERY_BROKER_URL = REDIS_AS_BROKER_URL
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"

CELERY_RESULT_EXTENDED = False
CELERY_RESULT_EXPIRES = 3600
CELERY_ALWAYS_EAGER = False
CELERY_ACKS_LATE = True
CELERY_TASK_PUBLISH_RETRY = False
CELERY_DISABLE_RATE_LIMITS = False
CELERY_TASK_TRACK_STARTED = True

ONE_VISION_LIBERTY_API_KEY = os.getenv("ONE_VISION_LIBERTY_API_KEY")
ONE_VISION_LIBERTY_API_SECRET_KEY = os.getenv("ONE_VISION_LIBERTY_API_SECRET_KEY")

ONE_VISION_BRO_API_KEY = os.getenv("ONE_VISION_BRO_API_KEY")
ONE_VISION_BRO_API_SECRET_KEY = os.getenv("ONE_VISION_BRO_API_SECRET_KEY")

# CKEDITOR_UPLOAD_PATH = "ncrm_helper"

LOGFILE_SIZE = 1024 * 1024 * 5
LOGFILE_COUNT = 10

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s -- %(asctime)s -- %(message)s',
        },
        'simple': {
            'format': '%(levelname)s -- %(message)s',
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        # 'users_file': {
        #     'level': 'INFO',
        #     'class': 'logging.handlers.RotatingFileHandler',
        #     'filename': os.path.join(BASE_DIR, 'logs') + '/users/users.log',
        #     'maxBytes': LOGFILE_SIZE,
        #     'backupCount': LOGFILE_COUNT,
        #     'formatter': 'verbose'
        # },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
        },
        'users': {
            'handlers': [
                'console',
                # 'users_file'
            ],
            'level': 'INFO',
            'propagate': True,
        },
        'notifications': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'gizmo': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'onevision': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'integrations': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        }
    }
}
